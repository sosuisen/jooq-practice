/*
 * This file is generated by jOOQ.
 */
package jooq.tables.daos;


import java.util.List;
import java.util.Optional;

import jooq.tables.Todos;
import jooq.tables.records.TodosRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TodosDao extends DAOImpl<TodosRecord, jooq.tables.pojos.Todos, Integer> {

    /**
     * Create a new TodosDao without any configuration
     */
    public TodosDao() {
        super(Todos.TODOS, jooq.tables.pojos.Todos.class);
    }

    /**
     * Create a new TodosDao with an attached configuration
     */
    public TodosDao(Configuration configuration) {
        super(Todos.TODOS, jooq.tables.pojos.Todos.class, configuration);
    }

    @Override
    public Integer getId(jooq.tables.pojos.Todos object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Todos> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Todos.TODOS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<jooq.tables.pojos.Todos> fetchById(Integer... values) {
        return fetch(Todos.TODOS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public jooq.tables.pojos.Todos fetchOneById(Integer value) {
        return fetchOne(Todos.TODOS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<jooq.tables.pojos.Todos> fetchOptionalById(Integer value) {
        return fetchOptional(Todos.TODOS.ID, value);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Todos> fetchRangeOfTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(Todos.TODOS.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<jooq.tables.pojos.Todos> fetchByTitle(String... values) {
        return fetch(Todos.TODOS.TITLE, values);
    }

    /**
     * Fetch records that have <code>date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Todos> fetchRangeOfDate(String lowerInclusive, String upperInclusive) {
        return fetchRange(Todos.TODOS.DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>date IN (values)</code>
     */
    public List<jooq.tables.pojos.Todos> fetchByDate(String... values) {
        return fetch(Todos.TODOS.DATE, values);
    }

    /**
     * Fetch records that have <code>priority BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.tables.pojos.Todos> fetchRangeOfPriority(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Todos.TODOS.PRIORITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>priority IN (values)</code>
     */
    public List<jooq.tables.pojos.Todos> fetchByPriority(Integer... values) {
        return fetch(Todos.TODOS.PRIORITY, values);
    }
}
